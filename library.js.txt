// Sample dataset
const library = [
  {
    title: "The Great Gatsby",
    author: "F. Scott Fitzgerald",
    year: 1925,
    pages: 180,
  },
  {
    title: "To Kill a Mockingbird",
    author: "Harper Lee",
    year: 1960,
    pages: 281,
  },
  {
    title: "1984",
    author: "George Orwell",
    year: 1949,
    pages: 328,
  },
  {
    title: "Pride and Prejudice",
    author: "Jane Austen",
    year: 1813,
    pages: 432,
  },
];

// Function to calculate the total number of pages in the library
function getTotalPages(library) {
  return library.reduce((total, book) => total + book.pages, 0);
}

// Function to get an array containing only the titles of the books
function getBookTitles(library) {
  return library.map((book) => book.title);
}

// Function to get an array of book titles published after a given year
function getBooksPublishedAfterYear(library, year) {
  return library
    .filter((book) => book.year > year)
    .map((book) => book.title);
}

// Function to calculate the average number of pages across all books
function getAveragePages(library) {
  const totalPages = getTotalPages(library);
  const numberOfBooks = library.length;
  return totalPages / numberOfBooks;
}

// Function to get the title of the book with the most pages
function getLongestBook(library) {
  const longestBook = library.reduce((longest, book) =>
    book.pages > longest.pages ? book : longest
  );
  return longestBook.title;
}

// Function to create an object where keys are author names and values are arrays of book titles
function getAuthorsAndBooks(library) {
  const authorsAndBooks = {};
  library.forEach((book) => {
    if (!authorsAndBooks[book.author]) {
      authorsAndBooks[book.author] = [];
    }
    authorsAndBooks[book.author].push(book.title);
  });
  return authorsAndBooks;
}

// Function to create an object where keys are author names and values are total pages by each author
function getTotalPagesByAuthor(library) {
  const totalPagesByAuthor = {};
  library.forEach((book) => {
    if (!totalPagesByAuthor[book.author]) {
      totalPagesByAuthor[book.author] = 0;
    }
    totalPagesByAuthor[book.author] += book.pages;
  });
  return totalPagesByAuthor;
}

// Function to get an object where keys are author names and values are titles of shortest books by each author
function getShortestBookByAuthor(library) {
  const shortestBookByAuthor = {};
  library.forEach((book) => {
    if (!shortestBookByAuthor[book.author] || book.pages < shortestBookByAuthor[book.author].pages) {
      shortestBookByAuthor[book.author] = book;
    }
  });
  const result = {};
  for (const author in shortestBookByAuthor) {
    result[author] = shortestBookByAuthor[author].title;
  }
  return result;
}

// Testing the functions
console.log("Total Number of Pages:", getTotalPages(library));
console.log("List of Book Titles:", getBookTitles(library));
console.log("Books Published After 1900:", getBooksPublishedAfterYear(library, 1900));
console.log("Average Number of Pages:", getAveragePages(library));
console.log("Longest Book:", getLongestBook(library));
console.log("Authors and Their Books:", getAuthorsAndBooks(library));
console.log("Total Number of Pages by Author:", getTotalPagesByAuthor(library));
console.log("Shortest Book by Author:", getShortestBookByAuthor(library));
